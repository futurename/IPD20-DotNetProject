<UserControl x:Class="GUI.SearchStockUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GUI"
             xmlns:uiClasses="clr-namespace:StockMonitor.Models.UIClasses"
             mc:Ignorable="d" 
             d:DesignHeight="526" d:DesignWidth="1229" 
             xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=PresentationFramework"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes">
    <UserControl.Resources>
        <Style TargetType="{x:Type UserControl}">
            <Style.Triggers>
                <Trigger Property="componentModel:DesignerProperties.IsInDesignMode" Value="True">
                    <Setter Property="Background" Value="#FFFFFF" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>
    <Grid Margin="0,0,-0.2,0" Height="526">
        <Grid.Resources>
            <uiClasses:PriceColorValueConverter x:Key="PriceColorValueConverter"/>
            <uiClasses:NotifySettingValueConverter x:Key="NotifySettingValueConverter"/>

        </Grid.Resources>

        <Grid Margin="10,55,-9.8,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4*"/>
                <ColumnDefinition Width="53*"/>
                <ColumnDefinition Width="270" />
            </Grid.ColumnDefinitions>
            <ListView SelectionMode="Single" x:Name="lsvMarketPreview" Grid.Column="0" FontSize="14" VerticalAlignment="Center"  MouseDoubleClick="lsvMarketPreview_MouseDoubleClick" Height="471" Margin="0,0,5,0" Grid.ColumnSpan="2">
                <ListView.Resources>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="FontSize" Value="16"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="Height" Value="50"/>
                    </Style>
                </ListView.Resources>
                <ListView.View>
                    <GridView>
                        <GridView.ColumnHeaderContainerStyle>
                            <Style>
                                <Setter Property="TextElement.FontSize" Value="14"/>
                                <Setter Property="TextElement.FontWeight" Value="Bold"/>
                            </Style>
                        </GridView.ColumnHeaderContainerStyle>
                        <GridViewColumn Header="Symbol" Width="260">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <StackPanel Orientation="Vertical" HorizontalAlignment="Center" Width="190">
                                            <StackPanel Orientation="Horizontal">
                                                <Image Source="{Binding Logo}" Height="20" HorizontalAlignment="Left" Width="140"/>
                                                <TextBlock Text="{Binding Symbol}" FontSize="16" HorizontalAlignment="Center" Width="50" FontWeight="Bold"/>
                                            </StackPanel>
                                            <TextBlock Text="{Binding CompanyName}" FontStyle="Italic" Foreground="DarkBlue" FontSize="13" Width="190"
                                                HorizontalAlignment="Center" Height="20"/>
                                        </StackPanel>
                                        <StackPanel Orientation="Vertical" Height="40" Width="70" Margin="0,0,5,2">
                                            <Image   Height="12" Source="pack://application:,,,/Resources/bell.png" HorizontalAlignment="Center">
                                                <Image.Style>
                                                    <Style>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding NotifyPriceHigh, Converter={StaticResource NotifySettingValueConverter}}" Value="false">
                                                                <Setter Property="UIElement.Visibility" Value="Hidden"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding NotifyPriceHigh, Converter={StaticResource NotifySettingValueConverter}}" Value="true">
                                                                <Setter Property="UIElement.Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                            <TextBlock HorizontalAlignment="Center"  FontWeight="Bold" FontSize="9" Text="{Binding NotifyPriceHigh, StringFormat=N2, UpdateSourceTrigger=PropertyChanged}">
                                                <TextBlock.Style>
                                                    <Style>

                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding NotifyPriceHigh, Converter={StaticResource NotifySettingValueConverter}}" Value="false">
                                                                <Setter Property="UIElement.Visibility" Value="Hidden"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding NotifyPriceHigh, Converter={StaticResource NotifySettingValueConverter}}" Value="true">
                                                                <Setter Property="UIElement.Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                            <TextBlock HorizontalAlignment="Center"  FontWeight="Bold" FontSize="9" Text="{Binding NotifyPriceLow, StringFormat=N2, UpdateSourceTrigger=PropertyChanged}">
                                                <TextBlock.Style>
                                                    <Style>
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding NotifyPriceLow, Converter={StaticResource NotifySettingValueConverter}}" Value="false">
                                                                <Setter Property="UIElement.Visibility" Value="Hidden"/>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding NotifyPriceLow, Converter={StaticResource NotifySettingValueConverter}}" Value="true">
                                                                <Setter Property="UIElement.Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </TextBlock.Style>
                                            </TextBlock>
                                        </StackPanel>
                                    </StackPanel>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <GridViewColumn Header="Price" Width="100">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Name="tbPrice" TextAlignment="Center" Text="{Binding Price, StringFormat=N2, UpdateSourceTrigger=PropertyChanged}" FontWeight="Bold">
                                        <TextBlock.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="RED">
                                                        <Setter Property="TextBlock.Foreground" Value="Red"/>
                                                        <DataTrigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard >
                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="FontSize" Duration="0:0:0:3">
                                                                        <LinearDoubleKeyFrame Value="20" KeyTime="10%"/>
                                                                        <LinearDoubleKeyFrame Value="18" KeyTime="30%"/>
                                                                        <LinearDoubleKeyFrame Value="16" KeyTime="50%"/>
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </DataTrigger.EnterActions>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="GREEN">
                                                        <Setter Property="TextBlock.Foreground" Value="Green"/>
                                                        <DataTrigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard >
                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="FontSize" Duration="0:0:0:3" >
                                                                        <LinearDoubleKeyFrame Value="20" KeyTime="10%"/>
                                                                        <LinearDoubleKeyFrame Value="18" KeyTime="30%"/>
                                                                        <LinearDoubleKeyFrame Value="16" KeyTime="50%"/>
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </DataTrigger.EnterActions>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="BLACK">
                                                        <Setter Property="TextBlock.Foreground" Value="Black"/>
                                                        <DataTrigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard >
                                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="FontSize" Duration="0:0:0:3" >
                                                                        <LinearDoubleKeyFrame Value="20" KeyTime="10%"/>
                                                                        <LinearDoubleKeyFrame Value="18" KeyTime="30%"/>
                                                                        <LinearDoubleKeyFrame Value="16" KeyTime="50%"/>
                                                                    </DoubleAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </DataTrigger.EnterActions>
                                                    </DataTrigger>

                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </DataTemplate>

                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>

                        <GridViewColumn Header="Change %">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock TextAlignment="Center" Text="{Binding ChangePercentage, StringFormat=N2, UpdateSourceTrigger=PropertyChanged}" Width="60">
                                        <TextBlock.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="RED">
                                                        <Setter Property="TextBlock.Foreground" Value="Red"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="GREEN">
                                                        <Setter Property="TextBlock.Foreground" Value="Green"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="BLACK">
                                                        <Setter Property="TextBlock.Foreground" Value="Black"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Change">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock TextAlignment="Center" Text="{Binding PriceChange, StringFormat=N2, UpdateSourceTrigger=PropertyChanged}" Width="60">
                                        <TextBlock.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="RED">
                                                        <Setter Property="TextBlock.Foreground" Value="Red"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="GREEN">
                                                        <Setter Property="TextBlock.Foreground" Value="Green"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="BLACK">
                                                        <Setter Property="TextBlock.Foreground" Value="Black"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Volume" Width="80"  DisplayMemberBinding="{Binding Volume, StringFormat=\{0:#\,##0\,K\}, UpdateSourceTrigger=PropertyChanged}"/>
                        <GridViewColumn Header="Open" DisplayMemberBinding="{Binding Open, StringFormat=\{0:0.00\}}"/>
                        <GridViewColumn Header="MktCap" Width="90" DisplayMemberBinding="{Binding MarketCapital, StringFormat=\{0:#\,##0\,\,M\}}"/>
                        <GridViewColumn Header="P/E" DisplayMemberBinding="{Binding PriceToEarningRatio, StringFormat=\{0:0.00\}}"/>
                        <GridViewColumn Header="CEO" DisplayMemberBinding="{Binding CEO}"/>
                        <GridViewColumn Header="Industry"   DisplayMemberBinding="{Binding Industry}"/>
                    </GridView>
                </ListView.View>
                <ListView.ContextMenu>
                    <ContextMenu>
                        <MenuItem x:Name="lsvMkt_miAddToWatchList" Header="Add to watch list" Click="LsvMkt_miAddToWatchList_OnClick"/>
                        <MenuItem x:Name="lsvMkt_miShowStockDetails" Header="Show stock details"/>
                        <MenuItem x:Name="lsvMkt_miSetTargetPrice" Header="Set price notification" Click="LsvMkt_miSetTargetPrice_OnClick"/>

                    </ContextMenu>
                </ListView.ContextMenu>
            </ListView>
            <Grid Grid.Column="2">
                <ListView x:Name="lsvWatchList" VerticalAlignment="Top" Margin="10,0,10.2,0" Height="227">
                    <ListView.Resources>
                        <Style TargetType="{x:Type ListViewItem}">
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                            <Setter Property="FontSize" Value="12"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                            <Setter Property="FontStyle" Value="Italic"/>
                        </Style>
                    </ListView.Resources>
                    <ListView.View>
                        <GridView>
                            <GridView.ColumnHeaderContainerStyle>
                                <Style>
                                    <Setter Property="TextElement.FontSize" Value="14"/>
                                    <Setter Property="TextElement.FontWeight" Value="Bold"/>
                                </Style>
                            </GridView.ColumnHeaderContainerStyle>
                            <GridViewColumn Header="Symbol" DisplayMemberBinding="{Binding Symbol}"/>
                            <GridViewColumn Header="Price">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Price, StringFormat=N2, UpdateSourceTrigger=PropertyChanged}">
                                            <TextBlock.Style>
                                                <Style>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="1">
                                                            <Setter Property="TextBlock.Foreground" Value="Red"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="2">
                                                            <Setter Property="TextBlock.Foreground" Value="Green"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="3">
                                                            <Setter Property="TextBlock.Foreground" Value="Black"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Chg%">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding ChangePercentage, StringFormat=N3, UpdateSourceTrigger=PropertyChanged}">
                                            <TextBlock.Style>
                                                <Style>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="1">
                                                            <Setter Property="TextBlock.Foreground" Value="Red"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="2">
                                                            <Setter Property="TextBlock.Foreground" Value="Green"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="3">
                                                            <Setter Property="TextBlock.Foreground" Value="Black"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                            <GridViewColumn Header="Chg">
                                <GridViewColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding PriceChange, StringFormat=N2, UpdateSourceTrigger=PropertyChanged}">
                                            <TextBlock.Style>
                                                <Style>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="1">
                                                            <Setter Property="TextBlock.Foreground" Value="Red"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="2">
                                                            <Setter Property="TextBlock.Foreground" Value="Green"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="3">
                                                            <Setter Property="TextBlock.Foreground" Value="Black"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </DataTemplate>
                                </GridViewColumn.CellTemplate>
                            </GridViewColumn>
                        </GridView>
                    </ListView.View>
                    <ListView.ContextMenu>
                        <ContextMenu>
                            <MenuItem x:Name="lsvWatch_miAddToWatchList" Header="Add to watch list" Click="LsvWatch_miAddToWatchList_OnClick"/>
                            <MenuItem x:Name="lsvWatch_miDeleteFromWatchList" Header="Delete from watch list" Click="LsvWatch_miDeleteFromWatchList_OnClick"/>
                            <MenuItem x:Name="lsvWatch_SetTargetPrice" Header="Set price notification" Click="LsvWatch_SetTargetPrice_OnClick"/>
                        </ContextMenu>
                    </ListView.ContextMenu>
                </ListView>
                <ListBox Margin="10,232,10,4.6"/>
            </Grid>
        </Grid>
        <TextBox Name="tbSearchBar" Width="120"
            Style="{StaticResource MaterialDesignFloatingHintTextBox}"
            Text="Search here..."
            VerticalAlignment="Center"
            materialDesign:TextFieldAssist.HasClearButton="True"
            materialDesign:TextFieldAssist.SuffixText="" Margin="0,0,1079.2,484" GotFocus="TbSearchBar_OnGotFocus" LostFocus="TbSearchBar_OnLostFocus"
            PreviewKeyUp="TbSearchBar_OnPreviewKeyUp">
            <materialDesign:HintAssist.Hint>
                <StackPanel
                    Orientation="Horizontal"
                    Margin="-2 0 0 0">
                    <materialDesign:PackIcon
                        Kind="Search" />
                    <TextBlock>
                        @(CN:|CEO:|DS:)value;
                    </TextBlock>
                </StackPanel>
            </materialDesign:HintAssist.Hint>
        </TextBox>
        <Button x:Name="btClearSearch" FontSize="14" FontWeight="Bold" Content="Clear" Click="BtClearSearch_OnClick" HorizontalAlignment="Left" Margin="233,9,0,0" VerticalAlignment="Top" Width="75"/>
        <ListBox x:Name="lbSearchResult" Visibility="Hidden" HorizontalAlignment="Left" Height="171" Margin="80,41,0,0" VerticalAlignment="Top" Width="187" Foreground="Gray" Background="White">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Border>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock x:Name="rtbSymbolResult" Text="{Binding Symbol}" Foreground="Black" FontSize="14" FontWeight="Bold" Width="70" VerticalAlignment="Center"/>
                            <Image Source="{Binding Logo}" Height="20"/>
                        </StackPanel>
                    </Border>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Button Name="btCancelDefaultThreads" Content="Cancel Default Threads" HorizontalAlignment="Left" Margin="401,6,0,0" VerticalAlignment="Top" Width="183" Click="btCancelDefaultThreads_Click"/>
        <Button Name="btCancelWatchlistThreads" Content="Cancel Watchlist Threads" HorizontalAlignment="Left" Margin="602,6,0,0" VerticalAlignment="Top" Width="201" Click="btCancelWatchlistThreads_Click"/>
        <Button Name="btRestartRefresh" Content="Restart Refresh" HorizontalAlignment="Left" Margin="819,6,0,0" VerticalAlignment="Top" Width="127" Click="btRestartRefresh_Click"/>


    </Grid>
</UserControl>
