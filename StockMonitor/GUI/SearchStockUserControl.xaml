<UserControl x:Class="GUI.SearchStockUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GUI"
             xmlns:uiClasses="clr-namespace:StockMonitor.Models.UIClasses"
             mc:Ignorable="d" 
             xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=PresentationFramework"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes" Height="611.807">
    <UserControl.Resources>
        <Style TargetType="{x:Type UserControl}">
            <Style.Triggers>
                <Trigger Property="componentModel:DesignerProperties.IsInDesignMode" Value="True">
                    <Setter Property="Background" Value="#FFFFFF" />
                </Trigger>
            </Style.Triggers>
        </Style>

    </UserControl.Resources>

    <Grid Width="1480">
        <Grid.RowDefinitions>
            <RowDefinition Height="80"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1200*"/>
            <ColumnDefinition Width="194*"/>
            <ColumnDefinition Width="240"/>
        </Grid.ColumnDefinitions>
        <Grid.Resources>
            <uiClasses:PriceColorValueConverter x:Key="PriceColorValueConverter"/>
            <uiClasses:NotifySettingValueConverter x:Key="NotifySettingValueConverter"/>
        </Grid.Resources>

        <ListBox x:Name="lbSearchResult" Visibility="Hidden" HorizontalAlignment="Left" MaxHeight="500" Height="171" Margin="135,58,0,0" VerticalAlignment="Top" Width="345" Foreground="Gray" Background="White" Panel.ZIndex="1" Grid.RowSpan="2">
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <ContentPresenter/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Button Background="Transparent" Margin="2,4,0,0" BorderThickness="0" Height="35" Name="lb_btCompanyRow" Click="Lb_btCompanyRow_OnClick"  ClickMode="Press">
                        <StackPanel Orientation="Horizontal" Width="342">
                            <TextBlock Margin="5,0,0,0" x:Name="rtbSymbolResult" Text="{Binding Symbol}" Foreground="Black" FontSize="14" FontWeight="Bold" Width="60" VerticalAlignment="Center"/>
                            <Image Source="{Binding Logo}" Height="22" Margin="5,0,0,0"/>
                            <TextBlock Text="{Binding CompanyName}" FontSize="12" Foreground="DarkBlue" FontWeight="Bold" VerticalAlignment="Center" Margin="5,0,0,0"/>
                        </StackPanel>
                    </Button>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <materialDesign:ColorZone Grid.Row="0" Grid.ColumnSpan="3" Grid.Column="0" FontSize="12"
                Mode="PrimaryMid"
                Padding="16" VerticalAlignment="Stretch" Margin="1,0,0,10">
            <DockPanel>
                <ToggleButton
                        Style="{StaticResource MaterialDesignSwitchAccentToggleButton}" Name="tgbDataSourceSwitch" Click="TgbDataSourceSwitch_OnClick"
                        VerticalAlignment="Bottom"
                        DockPanel.Dock="Right" Margin="0,0,30,10" />
                <StackPanel
                        Orientation="Horizontal"
                        materialDesign:RippleAssist.IsCentered="True">
                    <ToggleButton
                            Style="{DynamicResource MaterialDesignHamburgerToggleButton}" />
                    <ComboBox Name="cbSearchType"
                            SelectedIndex="0"
                            Margin="8,4,0,8"
                            BorderThickness="0"
                            materialDesign:ColorZoneAssist.Mode="Standard"
                            materialDesign:TextFieldAssist.UnderlineBrush="{DynamicResource MaterialDesignPaper}"
                            BorderBrush="{DynamicResource MaterialDesignPaper}">
                        <ComboBoxItem Content="Symbol" Name="cbSearchType_cbiSymbol"/>
                        <ComboBoxItem Content="Company Name" Name="cbSearchType_cbCompanyName" Selected="CbSearchType_cbCompanyName_OnSelected"/>
                        <ComboBoxItem Content="CEO" Name="cbSearchType_cbCEO" Selected="CbSearchType_cbCEO_OnSelected"/>
                        <ComboBoxItem Content="Industry" Name="cbSearchType_cbIndustry" Selected="CbSearchType_cbIndustry_OnSelected" />
                    </ComboBox>
                    <materialDesign:ColorZone
                            Mode="Standard"
                            Padding="8 4 8 4"
                            CornerRadius="2"
                            Panel.ZIndex="1"
                            Margin="16 0 0 0"
                            materialDesign:ShadowAssist.ShadowDepth="Depth1" Width="344">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition
                                        Width="Auto" />
                                <ColumnDefinition
                                        Width="*" />
                                <ColumnDefinition
                                        Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Button
                                    Style="{DynamicResource MaterialDesignToolButton}" Margin="-5,0,105,0">
                                <materialDesign:PackIcon
                                        Kind="Magnify"
                                        Opacity=".56" />
                            </Button>
                            <TextBox Name="tbSearchBox" PreviewKeyUp="TbSearchBox_OnPreviewKeyUp" GotFocus="TbSearchBox_OnGotFocus" LostFocus="TbSearchBox_OnLostFocus" FontSize="16"
                                    Margin="24,2,-4,-2"
                                    materialDesign:TextFieldAssist.HasClearButton="True" 
                                    materialDesign:HintAssist.Hint="@(CN|CEO|IDT):{value}:{Limit};"
                                    materialDesign:TextFieldAssist.DecorationVisibility="Hidden"
                                    BorderThickness="0"
                                    MinWidth="200"
                                    VerticalAlignment="Center" Grid.ColumnSpan="3" Height="30" />
                            <Grid Margin="0,-2,100,2"/>
                        </Grid>
                    </materialDesign:ColorZone>
                    <Grid Width="124">
                        <Button
                            Style="{StaticResource MaterialDesignOutlinedButton}" Name="btClearSearch" Click="BtClearSearch_OnClick"
                            Foreground="White"
                            BorderBrush="White"
                            materialDesign:ButtonProgressAssist.Value="-1"
                            materialDesign:ButtonProgressAssist.IsIndicatorVisible="True"
                            materialDesign:ButtonProgressAssist.IsIndeterminate="True"
                            
                            Margin="22,4,41,2" >
                            <materialDesign:PackIcon Kind="Reload" Height="30" Width="30" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                        </Button>

                    </Grid>
                    <Grid Width="80">
                        <ToggleButton
                            Style="{StaticResource MaterialDesignActionToggleButton}"
                            Name="tbnSwitchMarketWatchList"
                            Click="TbnSwitchMarketWatchList_OnClick"
                            ToolTip="MaterialDesignActionLightToggleButton">
                            <ToggleButton.Content>
                                <materialDesign:PackIcon
                                    Kind="Favourite" Width ="30" Height="30"/>
                            </ToggleButton.Content>
                            <materialDesign:ToggleButtonAssist.OnContent>
                                <materialDesign:PackIcon
                                    Kind="ChartBellCurve" Width="30" Height="30"/>
                            </materialDesign:ToggleButtonAssist.OnContent>
                        </ToggleButton>
                    </Grid>
                </StackPanel>
            </DockPanel>
        </materialDesign:ColorZone>


        <ListView Grid.Column="0" SelectionMode="Single" x:Name="lsvMarketPreview" FontSize="14"  MouseDoubleClick="lsvMarketPreview_MouseDoubleClick" Margin="0,75,0,0" Grid.RowSpan="2" Grid.ColumnSpan="2" HorizontalAlignment="Left" Width="1206" Background="{x:Null}">
            <ListView.Resources>
                <Style TargetType="{x:Type ListView}">
                    <Setter Property="ItemContainerStyle">
                        <Setter.Value>
                            <Style TargetType="ListViewItem">
                                <Setter Property="VerticalContentAlignment" Value="Top"/>
                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                            </Style>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListView.Resources>
            <ListView.View>
                <GridView>
                    <GridView.ColumnHeaderContainerStyle>
                        <Style>
                            <Setter Property="TextElement.FontSize" Value="14"/>
                            <Setter Property="TextElement.FontWeight" Value="Bold"/>
                        </Style>
                    </GridView.ColumnHeaderContainerStyle>
                    <GridViewColumn Header="Symbol" Width="285">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <StackPanel  Orientation="Horizontal"  >
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center" Width="230" Name="stkSymbolField">
                                        <StackPanel Orientation="Vertical" VerticalAlignment="Center" Name="StpLogoArea" MouseMove="StpLogoArea_OnMouseMove">
                                            <Image Source="{Binding Logo}" Height="20" HorizontalAlignment="Left" Width="80"/>
                                            <TextBlock Text="{Binding CompanyName}" TextDecorations="underline" FontStyle="Italic" TextWrapping="Wrap" FontSize="12" Width="170"
                                                       HorizontalAlignment="Center" Margin="0,5,0,0" />
                                        </StackPanel>
                                        <StackPanel VerticalAlignment="Center">
                                            <TextBlock Text="{Binding Symbol}"  FontSize="18" Width="55" FontWeight="Bold" TextAlignment="Center"/>
                                        </StackPanel>
                                    </StackPanel>
                                    <StackPanel Width="40">
                                        <Button Width="20" Height="20" Name="btNotification"
                                                Click="BtNotification_OnClick" Foreground="#673ab7" Background="{x:Null}" BorderThickness="0">
                                            <materialDesign:PackIcon Kind="NotificationsActive"/>
                                            <Button.Style>
                                                <Style>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding NotifyPriceHigh, Converter={StaticResource NotifySettingValueConverter}}" Value="false">
                                                            <Setter Property="UIElement.Visibility" Value="Hidden"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding NotifyPriceHigh, Converter={StaticResource NotifySettingValueConverter}}" Value="true">
                                                            <Setter Property="UIElement.Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Button.Style>

                                        </Button>

                                        <TextBlock HorizontalAlignment="Center"  FontWeight="Bold" FontSize="9" Text="{Binding NotifyPriceHigh, StringFormat=N2, UpdateSourceTrigger=PropertyChanged}">
                                            <TextBlock.Style>
                                                <Style>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding NotifyPriceHigh, Converter={StaticResource NotifySettingValueConverter}}" Value="false">
                                                            <Setter Property="UIElement.Visibility" Value="Hidden"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding NotifyPriceHigh, Converter={StaticResource NotifySettingValueConverter}}" Value="true">
                                                            <Setter Property="UIElement.Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                        <TextBlock HorizontalAlignment="Center"  FontWeight="Bold" FontSize="9" Text="{Binding NotifyPriceLow, StringFormat=N2, UpdateSourceTrigger=PropertyChanged}">
                                            <TextBlock.Style>
                                                <Style>
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding NotifyPriceLow, Converter={StaticResource NotifySettingValueConverter}}" Value="false">
                                                            <Setter Property="UIElement.Visibility" Value="Hidden"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding NotifyPriceLow, Converter={StaticResource NotifySettingValueConverter}}" Value="true">
                                                            <Setter Property="UIElement.Visibility" Value="Visible"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                    </StackPanel>
                                </StackPanel>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Header="Price" Width="100">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock x:Name="tbPrice"  TextAlignment="Center" Text="{Binding Price, StringFormat=N2, UpdateSourceTrigger=PropertyChanged}" FontWeight="Bold">
                                    <TextBlock.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="RED">
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard x:Name="redStroy">
                                                            <Storyboard>
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="FontSize" Duration="0:0:0:3">
                                                                    <LinearDoubleKeyFrame Value="20" KeyTime="10%"/>
                                                                    <LinearDoubleKeyFrame Value="18" KeyTime="30%"/>
                                                                    <LinearDoubleKeyFrame Value="16" KeyTime="50%"/>
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </DataTrigger.EnterActions>
                                                    <DataTrigger.ExitActions>
                                                        <StopStoryboard BeginStoryboardName="redStroy"/>
                                                    </DataTrigger.ExitActions>
                                                    <Setter Property="TextBlock.Foreground" Value="Red"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="GREEN">
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard x:Name="greedStory">
                                                            <Storyboard >
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="FontSize" Duration="0:0:0:3" >
                                                                    <LinearDoubleKeyFrame Value="20" KeyTime="10%"/>
                                                                    <LinearDoubleKeyFrame Value="18" KeyTime="30%"/>
                                                                    <LinearDoubleKeyFrame Value="16" KeyTime="50%"/>
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </DataTrigger.EnterActions>
                                                    <DataTrigger.ExitActions>
                                                        <StopStoryboard BeginStoryboardName="greedStory"/>
                                                    </DataTrigger.ExitActions>
                                                    <Setter Property="TextBlock.Foreground" Value="Green"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="BLACK">
                                                    <DataTrigger.EnterActions>
                                                        <BeginStoryboard x:Name="blackStory">
                                                            <Storyboard >
                                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="FontSize" Duration="0:0:0:3" >
                                                                    <LinearDoubleKeyFrame Value="20" KeyTime="10%"/>
                                                                    <LinearDoubleKeyFrame Value="18" KeyTime="30%"/>
                                                                    <LinearDoubleKeyFrame Value="16" KeyTime="50%"/>
                                                                </DoubleAnimationUsingKeyFrames>
                                                            </Storyboard>
                                                        </BeginStoryboard>
                                                    </DataTrigger.EnterActions>
                                                    <DataTrigger.ExitActions>
                                                        <StopStoryboard BeginStoryboardName="black"/>
                                                    </DataTrigger.ExitActions>
                                                    <Setter Property="TextBlock.Foreground" Value="Black"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>


                            </DataTemplate>

                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Header="Change %">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock TextAlignment="Center" Text="{Binding ChangePercentage, StringFormat=N2, UpdateSourceTrigger=PropertyChanged}" Width="60">
                                    <TextBlock.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="RED">
                                                    <Setter Property="TextBlock.Foreground" Value="Red"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="GREEN">
                                                    <Setter Property="TextBlock.Foreground" Value="Green"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="BLACK">
                                                    <Setter Property="TextBlock.Foreground" Value="Black"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Change">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock TextAlignment="Center" Text="{Binding PriceChange, StringFormat=N2, UpdateSourceTrigger=PropertyChanged}" Width="60">
                                    <TextBlock.Style>
                                        <Style>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="RED">
                                                    <Setter Property="TextBlock.Foreground" Value="Red"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="GREEN">
                                                    <Setter Property="TextBlock.Foreground" Value="Green"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="BLACK">
                                                    <Setter Property="TextBlock.Foreground" Value="Black"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Volume" Width="80"  DisplayMemberBinding="{Binding Volume, StringFormat=\{0:#\,##0\,K\}, UpdateSourceTrigger=PropertyChanged}"/>
                    <GridViewColumn Header="Open" DisplayMemberBinding="{Binding Open, StringFormat=\{0:0.00\}}"/>
                    <GridViewColumn Header="MktCap" Width="90" DisplayMemberBinding="{Binding MarketCapital, StringFormat=\{0:#\,##0\,\,M\}}"/>
                    <GridViewColumn Header="P/E" DisplayMemberBinding="{Binding PriceToEarningRatio, StringFormat=\{0:0.00\}}"/>
                    <GridViewColumn Header="CEO" DisplayMemberBinding="{Binding CEO}"/>
                    <GridViewColumn Header="Industry"   DisplayMemberBinding="{Binding Industry}" Width="200"/>
                </GridView>
            </ListView.View>
            <ListView.ContextMenu>
                <ContextMenu>
                    <MenuItem x:Name="lsvMkt_miAddToWatchList" Header="Add to watch list" Foreground="#673ab7" Click="LsvMkt_miAddToWatchList_OnClick">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="Favorite" Foreground="#673ab7" Height="18" Width="17"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem x:Name="lsvMkt_miRealTimeGraph" Header="Real-time graph" Foreground="#673ab7" Click="LsvMkt_miRealTimeGraph_OnClick">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="ChartLine" Foreground="#673ab7" Height="18" Width="17"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem x:Name="lsvMkt_miHistoricalGraph" Header="Historical graph" Foreground="#673ab7" Click="lsvMkt_miHistoricalGraph_Click" >
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="ChartBar" Foreground="#673ab7" Height="18" Width="17"/>
                        </MenuItem.Icon>
                    </MenuItem>
                    <MenuItem x:Name="lsvMkt_miSetTargetPrice" Header="Price notification" Foreground="#673ab7" Click="LsvMkt_miSetTargetPrice_OnClick">
                        <MenuItem.Icon>
                            <materialDesign:PackIcon Kind="NotificationsActive" Foreground="#673ab7" Height="18" Width="17"/>
                        </MenuItem.Icon>
                    </MenuItem>
                </ContextMenu>
            </ListView.ContextMenu>
        </ListView>
        <Grid Grid.Row="1" Grid.Column="2" Margin="247,0,10,0">
            <ListView x:Name="lsvWatchList" VerticalAlignment="Top" Margin="-276,-6,0,0" Height="320" MaxHeight="320" HorizontalAlignment="Left" Width="259" SelectionMode="Single" >
                <ListView.Resources>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="FontSize" Value="12"/>
                        <Setter Property="FontWeight" Value="Bold"/>
                        <Setter Property="FontStyle" Value="Italic"/>
                    </Style>
                </ListView.Resources>
                <ListView.View>
                    <GridView>
                        <GridView.ColumnHeaderContainerStyle>
                            <Style>
                                <Setter Property="TextElement.FontSize" Value="14"/>
                                <Setter Property="TextElement.FontWeight" Value="Bold"/>
                            </Style>
                        </GridView.ColumnHeaderContainerStyle>
                        <GridViewColumn Header="Symbol" DisplayMemberBinding="{Binding Symbol}"/>
                        <GridViewColumn Header="Price">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Price, StringFormat=N2, UpdateSourceTrigger=PropertyChanged}">
                                        <TextBlock.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="RED">
                                                        <Setter Property="TextBlock.Foreground" Value="Red"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="GREEN">
                                                        <Setter Property="TextBlock.Foreground" Value="Green"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="BLACK">
                                                        <Setter Property="TextBlock.Foreground" Value="Black"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Chg%">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding ChangePercentage, StringFormat=N2, UpdateSourceTrigger=PropertyChanged}">
                                        <TextBlock.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="RED">
                                                        <Setter Property="TextBlock.Foreground" Value="Red"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="GREEN">
                                                        <Setter Property="TextBlock.Foreground" Value="Green"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="BLACK">
                                                        <Setter Property="TextBlock.Foreground" Value="Black"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Chg">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding PriceChange, StringFormat=N2, UpdateSourceTrigger=PropertyChanged}">
                                        <TextBlock.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="RED">
                                                        <Setter Property="TextBlock.Foreground" Value="Red"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="GREEN">
                                                        <Setter Property="TextBlock.Foreground" Value="Green"/>
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding PriceChange, Converter={StaticResource PriceColorValueConverter}}" Value="BLACK">
                                                        <Setter Property="TextBlock.Foreground" Value="Black"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
                <ListView.ContextMenu>
                    <ContextMenu>
                        <MenuItem x:Name="lsvWatch_miDeleteFromWatchList" Header="Delete"  Foreground="#673ab7" Click="LsvWatch_miDeleteFromWatchList_OnClick">
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="DeleteOff" Foreground="#673ab7" Height="18" Width="17"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem x:Name="lsvWatch_miTradeStock" Header="Trade Stock" Foreground="#673ab7" Click="LsvWatch_miTradeStock_OnClick" >
                            <MenuItem.Icon>
                                <materialDesign:PackIcon Kind="AttachMoney" Foreground="#673ab7" Height="18" Width="17"/>
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </ListView.ContextMenu>
            </ListView>
            <Button x:Name="btCancelDefaultThreads" Content="Cancel Default" Margin="-220,372,0,0" VerticalAlignment="Top" Click="btCancelDefaultThreads_Click" HorizontalAlignment="Left" Width="134"/>
            <Button x:Name="btCancelWatchlistThreads" Content="Cancel Watchlist" Margin="-221,420,0,0" VerticalAlignment="Top" Click="btCancelWatchlistThreads_Click" RenderTransformOrigin="0.671,2.585" HorizontalAlignment="Left" Width="133">
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="0.627"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
            </Button>
            <Button x:Name="btRestartRefresh" Content="Restart All" Margin="-219,467,0,0" Click="btRestartRefresh_Click" Height="28" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5" HorizontalAlignment="Left" Width="133">
                <Button.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="0.325"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Button.RenderTransform>
            </Button>
        </Grid>
    </Grid>
</UserControl>
